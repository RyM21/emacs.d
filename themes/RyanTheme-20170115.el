deftheme RyanTheme
  "Created 2017-01-16."

(custom-theme-set-variables
 'RyanTheme
 '(ansi-color-faces-vector [default default default italic underline success warning error])
 '(ansi-color-names-vector ["#272822" "#F92672" "#A6E22E" "#E6DB74" "#66D9EF" "#FD5FF0" "#A1EFE4" "#F8F8F2"])
 '(bbdb-address-label-list (quote ("home" "work")))
 '(bbdb-check-auto-save-file t)
 '(bbdb-default-country "USA")
 '(bbdb-default-domain "@gmail.com")
 '(bbdb-default-label-list (quote ("mobile" "home" "work")))
 '(bbdb-file "~/notes/.bbdb")
 '(bbdb-file-remote "10.0.1.3:/home/pi/ryancloud/Dropbox/notes/.bbdb")
 '(custom-safe-themes t)
 '(debug-on-error t)
 '(desktop-save nil)
 '(font-lock-global-modes nil)
 '(history-delete-duplicates t)
 '(history-length 2000)
 '(hl-line-sticky-flag nil)
 '(ledger-highlight-xact-under-point nil)
 '(ledger-schedule-file "~/notes/ledger-scheduled.dat")
 '(ledger-use-iso-dates t)
 '(minibuffer-auto-raise t)
 '(org-after-todo-state-change-hook nil)
 '(org-agenda-before-write-hook (quote (org-agenda-add-entry-text org-carry-forward-uncompleted-tasks)))
 '(org-agenda-clockreport-parameter-plist (quote (:link t :maxlevel 3)))
 '(org-agenda-columns-compute-summary-properties nil)
 '(org-agenda-columns-show-summaries nil)
 '(org-agenda-compact-blocks t)
 '(org-agenda-deadline-leaders (quote ("DUE:  " "Due in %3d d.: " "OVERDUE by %2d d.: ")))
 '(org-agenda-default-appointment-duration 60)
 '(org-agenda-files (quote ("~/notes/todo.org" "~/notes/wbblog.org" "~/notes/mobileorg.org" "~/notes/habits.org")))
 '(org-agenda-finalize-hook (quote (org-agenda-property-add-properties hl-line-mode)))
 '(org-agenda-fontify-priorities t)
 '(org-agenda-ignore-properties (quote (appt stats category)))
 '(org-agenda-inactive-leader "")
 '(org-agenda-mouse-1-follows-link t)
 '(org-agenda-prefix-format "")
 '(org-agenda-remove-tags t)
 '(org-agenda-scheduled-leaders (quote ("" "")))
 '(org-agenda-show-inherited-tags nil)
 '(org-agenda-skip-deadline-if-done t)
 '(org-agenda-skip-scheduled-if-done t)
 '(org-agenda-skip-timestamp-if-deadline-is-shown t)
 '(org-agenda-skip-timestamp-if-done t)
 '(org-agenda-skip-unavailable-files t)
 '(org-agenda-sorting-strategy (quote (todo-state-up deadline-down priority-down scheduled-up habit-up effort-up category-keep tag-up alpha-up)))
 '(org-agenda-span 7)
 '(org-agenda-start-on-weekday nil)
 '(org-agenda-start-with-clockreport-mode t)
 '(org-agenda-sticky nil)
 '(org-agenda-tags-column 10)
 '(org-agenda-tags-todo-honor-ignore-options t)
 '(org-agenda-todo-keyword-format "")
 '(org-agenda-view-columns-initially t)
 '(org-agenda-window-setup (quote other-window))
 '(org-archive-location "%s_archive::* Archive")
 '(org-babel-load-languages (quote ((latex . t) (shell . t) (python . t) (sqlite . t) (perl . t) (org . t) (js . t) (awk . t) (emacs-lisp . t) (ledger . t) (sql . t))))
 '(org-capture-templates (quote (("e" "errand" entry (file+headline "~/Dropbox/notes/todo.org" "ERRANDS") (file "~/.emacs.d/templates/errand.txt") :prepend t :immediate-finish t :kill-buffer t) ("w" "wordbrewery" entry (file+headline "~/Dropbox/notes/todo.org" "WORDBREWERY") (file "~/.emacs.d/templates/errand.txt") :prepend t :immediate-finish t :kill-buffer t) ("l" "law" entry (file+headline "~/Dropbox/notes/todo.org" "LAW") (file "~/.emacs.d/templates/errand.txt") :prepend t :immediate-finish t :kill-buffer t) ("c" "coding_tech" entry (file+headline "~/Dropbox/notes/todo.org" "CODING & TECH") (file "~/.emacs.d/templates/errand.txt") :prepend t :immediate-finish t :kill-buffer t) ("s" "Scheduled Action" entry (file+datetree "~/notes/journal.org") "* %?%U" t nil) ("i" "Ledger Income" plain (file+datetree+prompt "~/Dropbox/notes/ledger.dat") (file "~/.emacs.d/templates/ledger_income.txt") :immediate-finish t :empty-lines-before 1 :empty-lines-after 1 :kill-buffer t) ("p" "Ledger expense" plain (file+datetree+prompt "~/Dropbox/notes/ledger.dat") (file "~/.emacs.d/templates/ledger_expense.txt") :immediate-finish t :empty-lines-before 1 :empty-lines-after 1 :kill-buffer t))))
 '(org-clock-clocked-in-display nil)
 '(org-clock-in-resume t)
 '(org-clock-out-remove-zero-time-clocks t)
 '(org-clock-out-when-done nil)
 '(org-clock-persist (quote clock))
 '(org-clone-delete-id t)
 '(org-closed-keep-when-no-todo t)
 '(org-confirm-babel-evaluate nil)
 '(org-deadline-warning-days 10)
 '(org-default-notes-file "~/Dropbox/notes/notes.org")
 '(org-directory "~/Dropbox/notes")
 '(org-display-custom-times (quote %Y/%m/%d))
 '(org-ditaa-jar-path "/home/ryan/.emacs.d/ditaa0_9.jar")
 '(org-edit-timestamp-down-means-later t)
 '(org-export-babel-evaluate nil)
 '(org-export-backends (quote (ascii beamer html icalendar latex md odt)))
 '(org-export-creator-string "")
 '(org-export-headline-levels 4)
 '(org-export-in-background t)
 '(org-export-with-archived-trees nil)
 '(org-export-with-author nil)
 '(org-export-with-drawers (quote (not "LOGBOOK" "PROPERTIES")))
 '(org-export-with-priority t)
 '(org-export-with-section-numbers nil)
 '(org-export-with-smart-quotes t)
 '(org-export-with-statistics-cookies nil)
 '(org-export-with-tags nil)
 '(org-export-with-timestamps (quote active))
 '(org-fast-tag-selection-single-key (quote expert))
 '(org-follow-link-hook (quote (org-narrow-to-subtree ignore)))
 '(org-from-is-user-regexp "\\<Ryan McCarl\\>")
 '(org-hide-emphasis-markers t)
 '(org-hide-leading-stars t)
 '(org-html-doctype "html")
 '(org-html-html5-fancy t)
 '(org-icalendar-alarm-time 60)
 '(org-icalendar-categories (quote (local-tags category all-tags)))
 '(org-icalendar-combined-agenda-file "~/notes/org.ics")
 '(org-icalendar-combined-description "Ryan's Org Calendar")
 '(org-icalendar-combined-name "Ryan's Org Calendar")
 '(org-icalendar-exclude-tags (quote ("nocalendar")))
 '(org-icalendar-include-bbdb-anniversaries t)
 '(org-icalendar-include-todo t)
 '(org-icalendar-store-UID t)
 '(org-icalendar-timezone "America/Denver")
 '(org-journal-dir "~/Dropbox/notes")
 '(org-log-done (quote time))
 '(org-log-into-drawer t)
 '(org-log-repeat nil)
 '(org-mobile-directory "~/notes")
 '(org-mobile-inbox-for-pull "~/notes/from-mobile.org")
 '(org-outline-path-complete-in-steps nil)
 '(org-pretty-entities t)
 '(org-refile-allow-creating-parent-nodes (quote confirm))
 '(org-refile-target-verify-function (quote sanityinc/verify-refile-target))
 '(org-refile-use-outline-path t)
 '(org-return-follows-link t)
 '(org-sort-agenda-noeffort-is-high nil)
 '(org-sort-agenda-notime-is-late nil)
 '(org-src-preserve-indentation t)
 '(org-support-shift-select t)
 '(org-tags-column 20)
 '(org-time-clocksum-format (quote (:hours "%d" :require-hours t :minutes ":%02d" :require-minutes t)))
 '(org-time-stamp-custom-formats (quote ("<%m/%d/%y %a>" . "<%m/%d/%y %a %H:%M>")))
 '(org-todo-keywords (quote ((sequence "NEXT(n)" "TODO(t)" "|" "DONE(x)" "DELEGATED(d)" "WAITING(w)" "SOMEDAY(s)" "NOT DOING(o)"))))
 '(org-todo-repeat-to-state "TODO")
 '(org-yank-adjusted-subtrees t)
 '(package-selected-packages (quote (pandoc-mode js-import bbdb-csv-import counsel-bbdb helm-bbdb helm-chrome helm-commandlinefu helm-dash helm-flymake helm-flyspell helm-git helm-w3m hyde org-preview-html org-sync org-wc todotxt todotxt-mode bbdb-vcard bbdb-android bbdb gmail-message-mode restart-emacs hledger-mode smart-mode-line xterm-color yasnippet ztree zerodark-theme yari yankpad yaml-mode yagist wiki-summary whole-line-or-region whitespace-cleanup-mode wgrep web-beautify visual-regexp-steroids virtualenvwrapper vc-darcs unfill undo-tree toc-org tidy textile-mode tao-theme tagedit sync-recentf switch-window ssh-deploy ssh-agency sql-indent sphinx-doc spacemacs-theme sort-words smtpmail-multi smotitah smex smarty-mode smart-shift slime-company slack skewer-reload-stylesheets skewer-less simplenote2 simple-rtm simple-bookmarks secretaria scss-mode scratch sass-mode ruby-hash-syntax rspec-mode robe rinari rich-minority reykjavik-theme regex-tool redshank rainbow-mode rainbow-delimiters r-autoyas quiet python-x python-switch-quotes python-info python-docstring python-django pytest pylint pyenv-mode-auto pydoc py-test py-autopep8 pushbullet projectile-rails project-local-variables pony-mode polymode pip-requirements password-vault parse-csv paredit-menu paredit-everywhere paradox paper-theme pandoc page-break-lines ox-twbs ox-rst ox-pandoc ox-jira origami orglue org2jekyll org-vcard org-seek org-redmine org-random-todo org-pomodoro org-password-manager org-page org-outlook org-mobile-sync org-journal org-jira org-jekyll org-iv org-if org-gnome org-gcal org-fstree org-elisp-help org-ehtml org-dropbox org-download org-dotemacs org-doing org-dashboard org-context org-clock-csv org-cliplink org-capture-pop-frame org-caldav org-bullets org-bookmark-heading org-board org-beautify-theme org-babel-eval-in-repl org-autolist org-attach-screenshot org-alert org-agenda-property org-ac ob-typescript ob-translate ob-restclient ob-php ob-mongo ob-http ob-browser npm-mode nlinum ng2-mode mysql2sqlite mwe-log-commands move-dup monokai-theme mmt mmm-mode melancholy-theme material-theme markdown-mode+ magit-gh-pulls lush-theme lua-mode lively live-py-mode literate-starter-kit liso-theme less-css-mode lentic-server ledger-mode kooten-theme json-mode js3-mode js-comint jedi java-imports jasminejs-mode jade ivy-youtube ipretty intero initsplit info-buffer info+ indent-tools indent-guide import-js immortal-scratch idea-darkula-theme ibuffer-vc html-check-frag hl-sexp hippie-expand-slime hindent highlight-symbol highlight-quoted highlight-escape-sequences hexo help-mode+ help+ helm-youtube helm-unicode helm-swoop helm-pydoc helm-org-rifle helm-notmuch helm-google helm-flycheck helm-emmet helm-css-scss helm-company helm-backup helm-aws hayoo hamburg-theme hackernews guide-key gruber-darker-theme grandshell-theme goto-gem gotham-theme gnuplot gmail2bbdb gitignore-mode github-issues github-clone gitconfig-mode git-timemachine git-messenger git-blamed fullframe forest-blue-theme foggy-night-theme flymd flycheck-pyflakes flycheck-package flycheck-ledger flycheck-elm flycheck-clojure flycheck-checkbashisms flycheck-bashate firebelly-theme fill-column-indicator fastdef expand-region exec-path-from-shell esup esqlite-helm eslint-fix erlang ereader emaps emacsshot emacsql-sqlite emacsql-mysql emacsist-view elmacro elm-mode elisp-slime-nav elein dsvn django-manage distinguished-theme disable-mouse dired-sort dired+ diminish diff-hl deft default-text-scale darcsum csv-nav csv-mode css-eldoc css-comb crontab-mode counsel conda company-web company-quickhelp company-anaconda color-theme-sanityinc-tomorrow color-theme-sanityinc-solarized color-theme coffee-mode code-library cljsbuild-mode cl-lib-highlight cask-mode bundler bug-reference-github browse-kill-ring browse-at-remote blog-admin basic-c-compile bash-completion babel-repl auto-virtualenv auto-indent-mode auto-compile anzu ample-theme ample-regexps aggressive-indent ac-html-csswatcher ac-html-bootstrap ac-html-angular ac-html ac-emmet)))
 '(safe-local-variable-values (quote (quote ((eval setq org-descriptive-links t) (eval setq org-tags-column 0)))))
 '(user-mail-address "ryan.mccarl@gmail.com")
 '(yas-snippet-dirs (quote ("/home/ryan/.emacs.d/snippets" yas-installed-snippets-dir "~/.emacs.d/elpa/yasnippet-20161221.1953/snippets")))
 '(desktop-save-mode nil)
 '(global-visual-line-mode  '(ansi-color-map [default default default italic underline success warning error nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil (foreground-color . "black") (foreground-color . "#d55e00") (foreground-color . "#009e73") (foreground-color . "#f8ec59") (foreground-color . "#0072b2") (foreground-color . "#cc79a7") (foreground-color . "#56b4e9") (foreground-color . "white") nil nil (background-color . "black") (background-color . "#d55e00") (background-color . "#009e73") (background-color . "#f8ec59") (background-color . "#0072b2") (background-color . "#cc79a7") (background-color . "#56b4e9") (background-color . "white") nil nil])
 '(auth-source-protocols (quote (quote (quote (quote ((imap "imap" "imaps" "143" "993" "995") (pop3 "pop3" "pop" "pop3s" "110" "995" "993") (ssh "ssh" "22") (sftp "sftp" "115") (smtp "smtp" "25" "587")))))))
 '(diary-entry-marker (quote (quote (quote (quote font-lock-variable-name-face)))))
 '(gnus-logo-colors (quote (quote (quote (quote ("#528d8d" "#c0c0c0"))))))
 '(inhibit-startup-buffer-menu t)
 '(inhibit-startup-echo-area-message "ryan")
 '(inhibit-startup-screen t)
 '(initial-buffer-choice "~/notes/todo.org")
 '(initial-major-mode (quote (quote org-mode)))
 '(initial-scratch-message nil)
 '(compilation-message-face (quote (quote default))))

(custom-theme-set-faces
 'RyanTheme
 '(default ((t (:foreground "#F8F8F2"))))
 '(custom-documentation ((t (:slant italic))))
 '(font-lock-comment-delimiter-face ((((class color) (min-colors 257)) (:foreground "#75715E")) (((class color) (min-colors 89)) (:foreground "#8B8878"))))
 '(org-agenda-calendar-event ((t (:foreground "#F8F8F0"))))
 '(org-agenda-calendar-sexp ((t (:foreground "#F8F8F2" :slant italic))))
 '(org-agenda-clocking ((t (:inherit nil))))
 '(org-agenda-column-dateline ((t (:height 1.0))))
 '(org-block ((((class color) (min-colors 257)) (:foreground "#F8F8F0" :background "#3E3D31")) (((class color) (min-colors 89)) (:foreground "#FFFAFA" :background "#3E3E3E"))))
 '(org-date ((((class color) (min-colors 257)) (:foreground "#66D9EF" :underline t)) (((class color) (min-colors 89)) (:foreground "#5FD7FF" :underline t))))
 '(org-document-info-keyword ((((type graphic)) :foreground "#e5c900")))
 '(org-hide ((((class color) (min-colors 257)) (:foreground "#272822")) (((class color) (min-colors 89)) (:foreground "#1B1E1C"))))
 '(org-level-3 ((((class color) (min-colors 257)) (:inherit default :height 1.15 :foreground "#66D9EF")) (((class color) (min-colors 89)) (:inherit default :height 1.15 :foreground "#5FD7FF"))))
 '(org-level-4 ((((class color) (min-colors 257)) (:inherit default :height 1.1 :foreground "#E6DB74")) (((class color) (min-colors 89)) (:inherit default :height 1.1 :foreground "#CDC673"))))
 '(org-meta-line ((t (:inherit font-lock-comment-face :foreground "slate gray" :slant italic :height 0.7 :family "Inconsolata"))))
 '(org-property-value ((t (:foreground "light slate gray" :height 0.7))))
 '(org-special-keyword ((((class color) (min-colors 257)) (:foreground "#75715E" :weight bold)) (((class color) (min-colors 89)) (:foreground "#8B8878" :weight bold))))
 '(cursor ((((class color) (min-colors 257)) (:foreground "#272822" :background "#F8F8F2" :inverse-video t)) (((class color) (min-colors 89)) (:foreground "#1B1E1C" :background "#F5F5F5" :inverse-video t))))
; '(fringe ((((class color) (min-colors 257)) (:foreground "#F8F8F2" :background "#272822")) (((class color) (min-colors 89)) (:foreground "#F5F5F5" :background "#1B1E1C"))))
 '(highlight ((((class color) (min-colors 257)) (:background "#49483E")) (((class color) (min-colors 89)) (:background "#474747"))))
 '(region ((((class color) (min-colors 257)) (:inherit highlight :background "#49483E")) (((class color) (min-colors 89)) (:inherit highlight :background "#474747"))))
 '(secondary-selection ((((class color) (min-colors 257)) (:inherit region :background "#3E3D31")) (((class color) (min-colors 89)) (:inherit region :background "#3E3E3E"))))
 '(isearch ((((class color) (min-colors 257)) (:inherit region :background "#A6E22E")) (((class color) (min-colors 89)) (:inherit region :background "#87D700"))))
 '(lazy-highlight ((((class color) (min-colors 257)) (:inherit highlight :background "#3E3D31")) (((class color) (min-colors 89)) (:inherit highlight :background "#8B8878"))))
 '(trailing-whitespace ((((class color) (min-colors 257)) (:background "#F92672")) (((class color) (min-colors 89)) (:background "#FF1493"))))
 '(mode-line ((((class color) (min-colors 257)) (:inverse-video unspecified :underline unspecified :foreground "#F8F8F0" :background "#49483E" :box (:line-width 1 :color "#64645E" :style unspecified))) (((class color) (min-colors 89)) (:inverse-video unspecified :underline unspecified :foreground "#F5F5F5" :background "#1B1E1C" :box (:line-width 1 :color "#474747" :style unspecified)))))
 '(mode-line-inactive ((((class color) (min-colors 257)) (:inverse-video unspecified :underline unspecified :foreground "#75715E" :background "#272822" :box (:line-width 1 :color "#64645E" :style unspecified))) (((class color) (min-colors 89)) (:inverse-video unspecified :underline unspecified :foreground "#8B8878" :background "#1B1E1C" :box (:line-width 1 :color "#3D3D3D" :style unspecified)))))
 '(compilation-mode-line-fail ((((class color) (min-colors 257)) (:inherit compilation-error :foreground "#F92672" :weight bold)) (((class color) (min-colors 89)) (:inherit compilation-error :foreground "#FF1493" :weight bold))))
 '(compilation-mode-line-run ((((class color) (min-colors 257)) (:foreground "#FD971F" :weight bold)) (((class color) (min-colors 89)) (:foreground "#FF8C00" :weight bold))))
 '(compilation-mode-line-exit ((((class color) (min-colors 257)) (:inherit compilation-info :foreground "#A6E22E" :weight bold)) (((class color) (min-colors 89)) (:inherit compilation-info :foreground "#87D700" :weight bold))))
 '(minibuffer-prompt ((((class color) (min-colors 257)) (:foreground "#66D9EF")) (((class color) (min-colors 89)) (:foreground "#5FD7FF"))))
 '(escape-glyph ((((class color) (min-colors 257)) (:foreground "#75715E")) (((class color) (min-colors 89)) (:foreground "#8B8878"))))
 '(homoglyph ((((class color) (min-colors 89)) (:foreground "#c4a000"))))
 '(error ((((class color) (min-colors 257)) (:foreground "#F92672")) (((class color) (min-colors 89)) (:foreground "#FF1493"))))
 '(warning ((t (:foreground "#E6DB74"))))
 '(success ((((class color) (min-colors 257)) (:foreground "#A6E22E")) (((class color) (min-colors 89)) (:foreground "#87D700"))))
 '(font-lock-builtin-face ((((class color) (min-colors 257)) (:foreground "#F92672" :weight normal)) (((class color) (min-colors 89)) (:foreground "#FF1493" :weight normal))))
 '(font-lock-comment-face ((((class color) (min-colors 257)) (:foreground "#75715E")) (((class color) (min-colors 89)) (:foreground "#8B8878"))))
 '(font-lock-constant-face ((((class color) (min-colors 257)) (:foreground "#AE81FF")) (((class color) (min-colors 89)) (:foreground "#AF87FF"))))
 '(font-lock-function-name-face ((((class color) (min-colors 257)) (:foreground "#A6E22E")) (((class color) (min-colors 89)) (:foreground "#87D700"))))
 '(font-lock-keyword-face ((((class color) (min-colors 257)) (:foreground "#F92672" :weight normal)) (((class color) (min-colors 89)) (:foreground "#FF1493" :weight normal))))
 '(font-lock-string-face ((((class color) (min-colors 257)) (:foreground "#E6DB74")) (((class color) (min-colors 89)) (:foreground "#CDC673"))))
 '(font-lock-type-face ((((class color) (min-colors 257)) (:foreground "#66D9EF" :italic nil)) (((class color) (min-colors 89)) (:foreground "#5FD7FF" :italic nil))))
 '(font-lock-variable-name-face ((((class color) (min-colors 257)) (:foreground "#FD971F")) (((class color) (min-colors 89)) (:foreground "#FF8C00"))))
 '(link ((((class color) (min-colors 257)) (:foreground "#66D9EF" :underline t :weight bold)) (((class color) (min-colors 89)) (:foreground "#5FD7FF" :underline t :weight bold))))
 '(link-visited ((((class color) (min-colors 257)) (:foreground "#AE81FF" :underline t :weight normal)) (((class color) (min-colors 89)) (:foreground "#AF87FF" :underline t :weight normal))))
 '(gnus-group-news-1 ((((class color) (min-colors 257)) (:weight bold :inherit gnus-group-news-1-empty)) (((class color) (min-colors 89)) (:weight bold :inherit gnus-group-news-1-empty))))
 '(gnus-group-news-2 ((((class color) (min-colors 257)) (:weight bold :inherit gnus-group-news-2-empty)) (((class color) (min-colors 89)) (:weight bold :inherit gnus-group-news-2-empty))))
 '(gnus-group-news-3 ((((class color) (min-colors 257)) (:weight bold :inherit gnus-group-news-3-empty)) (((class color) (min-colors 89)) (:weight bold :inherit gnus-group-news-3-empty))))
 '(gnus-group-news-4 ((((class color) (min-colors 257)) (:weight bold :inherit gnus-group-news-4-empty)) (((class color) (min-colors 89)) (:weight bold :inherit gnus-group-news-4-empty))))
 '(gnus-group-news-5 ((((class color) (min-colors 257)) (:weight bold :inherit gnus-group-news-5-empty)) (((class color) (min-colors 89)) (:weight bold :inherit gnus-group-news-5-empty))))
 '(gnus-group-news-low ((((class color) (min-colors 257)) (:weight bold :inherit gnus-group-news-low-empty)) (((class color) (min-colors 89)) (:weight bold :inherit gnus-group-news-low-empty))))
 '(gnus-group-mail-1 ((((class color) (min-colors 257)) (:weight bold :inherit gnus-group-mail-1-empty)) (((class color) (min-colors 89)) (:weight bold :inherit gnus-group-mail-1-empty))))
 '(gnus-group-mail-2 ((((class color) (min-colors 257)) (:weight bold :inherit gnus-group-mail-2-empty)) (((class color) (min-colors 89)) (:weight bold :inherit gnus-group-mail-2-empty))))
 '(gnus-group-mail-3 ((((class color) (min-colors 257)) (:weight bold :inherit gnus-group-mail-3-empty)) (((class color) (min-colors 89)) (:weight bold :inherit gnus-group-mail-3-empty))))
 '(gnus-group-mail-low ((((class color) (min-colors 257)) (:weight bold :inherit gnus-group-mail-low-empty)) (((class color) (min-colors 89)) (:weight bold :inherit gnus-group-mail-low-empty))))
 '(message-header-name ((((class color) (min-colors 257)) (:foreground "#75715E")) (((class color) (min-colors 89)) (:foreground "#8B8878"))))
 '(message-header-cc ((((class color) (min-colors 257)) (:foreground "#F8F8F2" :weight normal)) (((class color) (min-colors 89)) (:foreground "#F5F5F5" :weight normal))))
 '(message-header-other ((((class color) (min-colors 257)) (:foreground "#F8F8F2" :weight normal)) (((class color) (min-colors 89)) (:foreground "#F5F5F5" :weight normal))))
 '(message-header-subject ((((class color) (min-colors 257)) (:foreground "#A1EFE4" :weight normal)) (((class color) (min-colors 89)) (:foreground "#5FFFFF" :weight normal))))
 '(message-header-to ((((class color) (min-colors 257)) (:foreground "#F8F8F2" :weight normal)) (((class color) (min-colors 89)) (:foreground "#F5F5F5" :weight normal))))
 '(message-cited-text ((((class color) (min-colors 257)) (:foreground "#75715E")) (((class color) (min-colors 89)) (:foreground "#8B8878"))))
 '(message-separator ((((class color) (min-colors 257)) (:foreground "#75715E" :slant italic)) (((class color) (min-colors 89)) (:foreground "#8B8878" :slant italic))))
 '(bold ((t (:bold t :weight bold))))
 '(bold-italic ((t (:bold t :italic t :slant italic :weight bold))))
 '(underline ((t (:underline t))))
 '(italic ((t (:italic t))))
 '(font-lock-doc-face ((((class color) (min-colors 257)) (:foreground "#75715E")) (((class color) (min-colors 89)) (:foreground "#8B8878"))))
 '(font-lock-negation-char-face ((((class color) (min-colors 257)) (:foreground "#E6DB74" :weight bold)) (((class color) (min-colors 89)) (:foreground "#CDC673" :weight bold))))
 '(font-lock-preprocessor-face ((((class color) (min-colors 257)) (:foreground "#F92672")) (((class color) (min-colors 89)) (:foreground "#FF1493"))))
 '(font-lock-regexp-grouping-backslash ((((class color) (min-colors 257)) (:foreground "#AE81FF" :weight normal)) (((class color) (min-colors 89)) (:foreground "#AF87FF" :weight normal))))
 '(font-lock-regexp-grouping-construct ((((class color) (min-colors 257)) (:foreground "#E6DB74" :weight normal)) (((class color) (min-colors 89)) (:foreground "#CDC673" :weight normal))))
 '(font-lock-warning-face ((((class color) (min-colors 257)) (:foreground "#FD971F" :weight bold :italic t :underline t)) (((class color) (min-colors 89)) (:foreground "#FF8C00" :weight bold :italic t :underline t))))
 '(shadow ((((class color) (min-colors 257)) (:foreground "#75715E")) (((class color) (min-colors 89)) (:foreground "#8B8878"))))
 '(rainbow-delimiters-depth-1-face ((((class color) (min-colors 257)) (:foreground "#AE81FF")) (((class color) (min-colors 89)) (:foreground "#AF87FF"))))
 '(rainbow-delimiters-depth-2-face ((((class color) (min-colors 257)) (:foreground "#66D9EF")) (((class color) (min-colors 89)) (:foreground "#5FD7FF"))))
 '(rainbow-delimiters-depth-3-face ((((class color) (min-colors 257)) (:foreground "#A6E22E")) (((class color) (min-colors 89)) (:foreground "#87D700"))))
 '(rainbow-delimiters-depth-4-face ((((class color) (min-colors 257)) (:foreground "#E6DB74")) (((class color) (min-colors 89)) (:foreground "#CDC673"))))
 '(rainbow-delimiters-depth-5-face ((((class color) (min-colors 257)) (:foreground "#FD971F")) (((class color) (min-colors 89)) (:foreground "#FF8C00"))))
 '(rainbow-delimiters-depth-6-face ((((class color) (min-colors 257)) (:foreground "#F92672")) (((class color) (min-colors 89)) (:foreground "#FF1493"))))
 '(rainbow-delimiters-depth-7-face ((((class color) (min-colors 257)) (:foreground "#AE81FF")) (((class color) (min-colors 89)) (:foreground "#AF87FF"))))
 '(rainbow-delimiters-depth-8-face ((((class color) (min-colors 257)) (:foreground "#66D9EF")) (((class color) (min-colors 89)) (:foreground "#5FD7FF"))))
 '(rainbow-delimiters-depth-9-face ((((class color) (min-colors 257)) (:foreground "#A6E22E")) (((class color) (min-colors 89)) (:foreground "#87D700"))))
 '(rainbow-delimiters-unmatched-face ((((class color) (min-colors 257)) (:foreground "#F8F8F2" :background "#272822" :inverse-video t)) (((class color) (min-colors 89)) (:foreground "#F5F5F5" :background "#1B1E1C" :inverse-video t))))
 '(mmm-code-submode-face ((((class color) (min-colors 257)) (:background "#64645E")) (((class color) (min-colors 89)) (:background "#3D3D3D"))))
 '(mmm-comment-submode-face ((((class color) (min-colors 257)) (:background "#40CAE4")) (((class color) (min-colors 89)) (:background "#008787"))))
 '(mmm-output-submode-face ((((class color) (min-colors 257)) (:background "#F70057")) (((class color) (min-colors 89)) (:background "#870000"))))
 '(match ((((class color) (min-colors 257)) (:background "#A6E22E" :foreground "#272822" :weight bold)) (((class color) (min-colors 89)) (:background "#87D700" :foreground "#1B1E1C" :weight bold))))
 '(isearch-fail ((((class color) (min-colors 257)) (:inherit isearch :foreground "#F92672" :background "#272822" :bold t)) (((class color) (min-colors 89)) (:inherit isearch :foreground "#FF1493" :background "#1B1E1C" :bold t))))
 '(anzu-mode-line ((((class color) (min-colors 257)) (:foreground "#AE81FF" :weight bold)) (((class color) (min-colors 89)) (:foreground "#AF87FF" :weight bold))))
 '(anzu-replace-highlight ((((class color) (min-colors 89)) (:inherit isearch-lazy-highlight-face))))
 '(anzu-replace-to ((((class color) (min-colors 89)) (:inherit isearch))))
 '(ido-subdir ((((class color) (min-colors 257)) (:foreground "#66D9EF")) (((class color) (min-colors 89)) (:foreground "#5FD7FF"))))
 '(ido-first-match ((((class color) (min-colors 257)) (:foreground "#E6DB74" :weight normal)) (((class color) (min-colors 89)) (:foreground "#CDC673" :weight normal))))
 '(ido-only-match ((((class color) (min-colors 257)) (:foreground "#272822" :background "#E6DB74" :weight normal)) (((class color) (min-colors 89)) (:foreground "#1B1E1C" :background "#CDC673" :weight normal))))
 '(ido-indicator ((((class color) (min-colors 257)) (:background "#F92672" :foreground "#272822" :width condensed)) (((class color) (min-colors 89)) (:background "#FF1493" :foreground "#1B1E1C" :width condensed))))
 '(ido-virtual ((((class color) (min-colors 257)) (:foreground "#A1EFE4")) (((class color) (min-colors 89)) (:foreground "#5FFFFF"))))
 '(vertical-border ((((class color) (min-colors 257)) (:foreground "#64645E")) (((class color) (min-colors 89)) (:foreground "#3D3D3D"))))
 '(border ((t (:background "gold" :foreground "black"))))
 '(mode-line-buffer-id ((((class color) (min-colors 257)) (:foreground "#A6E22E" :weight bold)) (((class color) (min-colors 89)) (:foreground "#87D700" :weight bold))))
 '(mode-line-emphasis ((t (:bold t :weight bold))))
 '(mode-line-highlight ((t (:box (:line-width 2 :color "grey40" :style released-button :height 0.9)))))
 '(header-line ((((class color) (min-colors 257)) (:foreground "#F8F8F0" :background "#49483E" :box (:color "#64645E" :line-width 1 :style unspecified))) (((class color) (min-colors 89)) (:foreground "#FFFAFA" :background "#474747" :box (:color "#3D3D3D" :line-width 1 :style unspecified)))))
 '(whitespace-empty ((((class color) (min-colors 257)) (:background unspecified :foreground "#F20055" :inverse-video t)) (((class color) (min-colors 89)) (:background unspecified :foreground "#FF5F87" :inverse-video t))))
 '(whitespace-hspace ((((class color) (min-colors 257)) (:background unspecified :foreground "#F8F8F0" :inverse-video unspecified)) (((class color) (min-colors 89)) (:background unspecified :foreground "#FFFAFA" :inverse-video unspecified))))
 '(whitespace-indentation ((((class color) (min-colors 257)) (:background unspecified :foreground "#E6DB74" :inverse-video unspecified :weight bold)) (((class color) (min-colors 89)) (:background unspecified :foreground "#CDC673" :inverse-video unspecified :weight bold))))
 '(whitespace-line ((((class color) (min-colors 257)) (:background unspecified :foreground "#FD5FF0" :inverse-video unspecified)) (((class color) (min-colors 89)) (:background unspecified :foreground "#D700D7" :inverse-video unspecified))))
 '(whitespace-newline ((((class color) (min-colors 257)) (:background unspecified :foreground "#75715E" :inverse-video unspecified)) (((class color) (min-colors 89)) (:background unspecified :foreground "#8B8878" :inverse-video unspecified))))
 '(whitespace-space ((((class color) (min-colors 257)) (:background unspecified :foreground "#75715E" :inverse-video unspecified :slant italic)) (((class color) (min-colors 89)) (:background unspecified :foreground "#8B8878" :inverse-video unspecified :slant italic))))
 '(whitespace-space-after-tab ((((class color) (min-colors 257)) (:background unspecified :foreground "#FD971F" :inverse-video t :weight bold)) (((class color) (min-colors 89)) (:background unspecified :foreground "#FF8C00" :inverse-video t :weight bold))))
 '(whitespace-space-before-tab ((((class color) (min-colors 257)) (:background "#F20055" :foreground unspecified :inverse-video unspecified)) (((class color) (min-colors 89)) (:background "#FF5F87" :foreground unspecified :inverse-video unspecified))))
 '(whitespace-tab ((((class color) (min-colors 257)) (:background unspecified :foreground "#F92672" :inverse-video unspecified :weight bold)) (((class color) (min-colors 89)) (:background unspecified :foreground "#FF1493" :inverse-video unspecified :weight bold))))
 '(whitespace-trailing ((((class color) (min-colors 257)) (:background unspecified :foreground "#A75B00" :inverse-video t)) (((class color) (min-colors 89)) (:background unspecified :foreground "#FFAF5F" :inverse-video t))))
 '(show-paren-match ((((class color) (min-colors 257)) (:foreground "#A6E22E" :background "#272822" :weight normal :inverse-video t)) (((class color) (min-colors 89)) (:foreground "#87D700" :background "#1B1E1C" :weight normal :inverse-video t))))
 '(show-paren-mismatch ((((class color) (min-colors 257)) (:foreground "#F92672" :background "#272822" :weight normal :inverse-video t)) (((class color) (min-colors 89)) (:foreground "#FF1493" :background "#1B1E1C" :weight normal :inverse-video t))))
 '(diff-added ((((class color) (min-colors 257)) (:foreground "#A6E22E" :background "#272822")) (((class color) (min-colors 89)) (:foreground "#87D700" :background "#1B1E1C"))))
 '(diff-changed ((((class color) (min-colors 257)) (:foreground "#66D9EF" :background "#272822")) (((class color) (min-colors 89)) (:foreground "#5FD7FF" :background "#1B1E1C"))))
 '(diff-removed ((((class color) (min-colors 257)) (:foreground "#F92672" :background "#272822")) (((class color) (min-colors 89)) (:foreground "#FF1493" :background "#1B1E1C"))))
 '(diff-header ((((class color) (min-colors 257)) (:background "#272822")) (((class color) (min-colors 89)) (:background "#1B1E1C"))))
 '(diff-file-header ((((class color) (min-colors 257)) (:background "#272822" :foreground "#F8F8F2" :weight bold)) (((class color) (min-colors 89)) (:background "#1B1E1C" :foreground "#F5F5F5" :weight bold))))
 '(diff-hunk-header ((((class color) (min-colors 89)) (:inherit diff-header))))
 '(diff-refine-added ((((class color) (min-colors 257)) (:foreground "#272822" :background "#A6E22E")) (((class color) (min-colors 89)) (:foreground "#1B1E1C" :background "#87D700"))))
 '(diff-refine-removed ((((class color) (min-colors 257)) (:foreground "#272822" :background "#F92672")) (((class color) (min-colors 89)) (:foreground "#1B1E1C" :background "#FF1493"))))
 '(diff-hl-insert ((((class color) (min-colors 257)) (:background "#679A01" :foreground "#CCF47C")) (((class color) (min-colors 89)) (:background "#AFD700" :foreground "#5F8700"))))
 '(diff-hl-change ((((class color) (min-colors 257)) (:background "#1DB4D0" :foreground "#CAF5FD")) (((class color) (min-colors 89)) (:background "#87D7FF" :foreground "#008787"))))
 '(diff-hl-delete ((((class color) (min-colors 257)) (:background "#F20055" :foreground "#FEB0CC")) (((class color) (min-colors 89)) (:background "#FF5F87" :foreground "#870000"))))
 '(eldoc-highlight-function-argument ((t (:bold t :weight bold))))
 '(undo-tree-visualizer-default-face ((((class color) (min-colors 257)) (:foreground "#75715E" :background "#272822")) (((class color) (min-colors 89)) (:foreground "#8B8878" :background "#1B1E1C"))))
 '(undo-tree-visualizer-current-face ((((class color) (min-colors 257)) (:foreground "#66D9EF" :inverse-video t)) (((class color) (min-colors 89)) (:foreground "#5FD7FF" :inverse-video t))))
 '(undo-tree-visualizer-active-branch-face ((((class color) (min-colors 257)) (:foreground "#F8F8F0" :background "#272822" :weight bold)) (((class color) (min-colors 89)) (:foreground "#FFFAFA" :background "#1B1E1C" :weight bold))))
 '(undo-tree-visualizer-register-face ((((class color) (min-colors 257)) (:foreground "#E6DB74")) (((class color) (min-colors 89)) (:foreground "#CDC673"))))
 '(diredp-compressed-file-suffix ((((class color) (min-colors 89)) (:foreground "#81a2be"))))
 '(diredp-deletion ((((class color) (min-colors 89)) (:inherit error :inverse-video t))))
 '(diredp-deletion-file-name ((((class color) (min-colors 89)) (:inherit error))))
 '(diredp-date-time ((((class color) (min-colors 89)) (:foreground "#81a2be"))))
 '(diredp-dir-heading ((((class color) (min-colors 89)) (:foreground "#b5bd68" :weight bold))))
 '(diredp-dir-name ((((class color) (min-colors 89)) (:foreground "#8abeb7"))))
 '(diredp-dir-priv ((((class color) (min-colors 89)) (:foreground "#8abeb7" :background nil))))
 '(diredp-exec-priv ((((class color) (min-colors 89)) (:foreground "#de935f" :background nil))))
 '(diredp-executable-tag ((((class color) (min-colors 89)) (:foreground "#cc6666" :background nil))))
 '(diredp-file-name ((((class color) (min-colors 89)) (:foreground "#f0c674"))))
 '(diredp-file-suffix ((((class color) (min-colors 89)) (:foreground "#b5bd68"))))
 '(diredp-flag-mark ((((class color) (min-colors 89)) (:foreground "#b5bd68" :inverse-video t))))
 '(diredp-flag-mark-line ((((class color) (min-colors 89)) (:background nil :inherit highlight))))
 '(diredp-ignored-file-name ((((class color) (min-colors 89)) (:foreground "#969896"))))
 '(diredp-link-priv ((((class color) (min-colors 89)) (:background nil :foreground "#b294bb"))))
 '(diredp-mode-line-flagged ((((class color) (min-colors 89)) (:foreground "#cc6666"))))
 '(diredp-mode-line-marked ((((class color) (min-colors 89)) (:foreground "#b5bd68"))))
 '(diredp-no-priv ((((class color) (min-colors 89)) (:background nil))))
 '(diredp-number ((((class color) (min-colors 89)) (:foreground "#f0c674"))))
 '(diredp-other-priv ((((class color) (min-colors 89)) (:background nil :foreground "#b294bb"))))
 '(diredp-rare-priv ((((class color) (min-colors 89)) (:foreground "#cc6666" :background nil))))
 '(diredp-read-priv ((((class color) (min-colors 89)) (:foreground "#b5bd68" :background nil))))
 '(diredp-symlink ((((class color) (min-colors 89)) (:foreground "#b294bb"))))
 '(diredp-write-priv ((((class color) (min-colors 89)) (:foreground "#f0c674" :background nil))))
 '(widget-button ((t (:bold t :weight bold :box (:line-width 2 :style released-button)))))
 '(widget-field ((t (:background "dim gray"))))
 '(compilation-column-number ((((class color) (min-colors 257)) (:inherit font-lock-doc-face :foreground "#A1EFE4" :underline nil)) (((class color) (min-colors 89)) (:inherit font-lock-doc-face :foreground "#5FFFFF" :underline nil))))
 '(compilation-line-number ((((class color) (min-colors 257)) (:foreground "#A6E22E" :underline nil)) (((class color) (min-colors 89)) (:foreground "#87D700" :underline nil))))
 '(org-agenda-structure ((((class color) (min-colors 257)) (:foreground "#F8F8F0" :background "#3C3D37" :weight bold :slant normal :inverse-video nil :height 1.1 :underline nil :box (:line-width 2 :color "#272822"))) (((class color) (min-colors 89)) (:foreground "#FFFAFA" :background "#000000" :weight bold :slant normal :inverse-video nil :height 1.1 :underline nil :box (:line-width 2 :color "#1B1E1C")))))
 '(org-agenda-date ((((class color) (min-colors 257)) (:foreground "#75715E" :background "#272822" :weight normal :inverse-video nil :overline nil :slant normal :height 1.0 :box (:line-width 2 :color "#272822"))) (((class color) (min-colors 89)) (:foreground "#8B8878" :background "#1B1E1C" :weight normal :inverse-video nil :overline nil :slant normal :height 1.0 :box (:line-width 2 :color "#1B1E1C")))))
 '(org-agenda-done ((((class color) (min-colors 257)) (:foreground "#75715E" :slant italic)) (((class color) (min-colors 89)) (:foreground "#8B8878" :slant italic))))
 '(org-agenda-dimmed-todo-face ((((class color) (min-colors 257)) (:foreground "#75715E")) (((class color) (min-colors 89)) (:foreground "#8B8878"))))
 '(org-code ((((class color) (min-colors 257)) (:foreground "#75715E")) (((class color) (min-colors 89)) (:foreground "#8B8878"))))
 '(org-column ((((class color) (min-colors 257)) (:background "#3C3D37" :strike-through nil :underline nil :slant normal :weight normal :inherit default)) (((class color) (min-colors 89)) (:background "#000000" :strike-through nil :underline nil :slant normal :weight normal :inherit default))))
 '(org-column-title ((((class color) (min-colors 257)) (:background "#3C3D37" :underline t :weight bold)) (((class color) (min-colors 89)) (:background "#000000" :underline t :weight bold))))
 '(org-document-info ((((class color) (min-colors 257)) (:foreground "#F8F8F2")) (((class color) (min-colors 89)) (:foreground "#F5F5F5"))))
 '(org-document-title ((((class color) (min-colors 257)) (:foreground "#F8F8F0" :weight bold :height 1.3)) (((class color) (min-colors 89)) (:foreground "#FFFAFA" :weight bold :height 1.3))))
 '(org-done ((((class color) (min-colors 257)) (:weight bold :foreground "#A6E22E")) (((class color) (min-colors 89)) (:weight bold :foreground "#87D700"))))
 '(org-ellipsis ((((class color) (min-colors 257)) (:foreground "#75715E")) (((class color) (min-colors 89)) (:foreground "#8B8878"))))
 '(org-footnote ((((class color) (min-colors 257)) (:foreground "#FD5FF0" :underline t)) (((class color) (min-colors 89)) (:foreground "#D700D7" :underline t))))
 '(org-formula ((((class color) (min-colors 257)) (:foreground "#E6DB74")) (((class color) (min-colors 89)) (:foreground "#CDC673"))))
 '(org-link ((((class color) (min-colors 257)) (:foreground "#66D9EF" :underline t)) (((class color) (min-colors 89)) (:foreground "#5FD7FF" :underline t))))
 '(org-scheduled ((((class color) (min-colors 257)) (:foreground "#A6E22E")) (((class color) (min-colors 89)) (:foreground "#87D700"))))
 '(org-scheduled-previously ((((class color) (min-colors 257)) (:foreground "#A1EFE4")) (((class color) (min-colors 89)) (:foreground "#5FFFFF"))))
 '(org-scheduled-today ((((class color) (min-colors 257)) (:foreground "#66D9EF" :weight normal)) (((class color) (min-colors 89)) (:foreground "#5FD7FF" :weight normal))))
 '(org-table ((((class color) (min-colors 257)) (:foreground "#A6E22E")) (((class color) (min-colors 89)) (:foreground "#87D700"))))
 '(org-todo ((((class color) (min-colors 257)) (:foreground "#F92672" :weight bold))))
 '(org-upcoming-deadline ((((class color) (min-colors 257)) (:foreground "#E6DB74" :weight normal :underline nil)) (((class color) (min-colors 89)) (:foreground "#CDC673" :weight normal :underline nil))))
 '(org-warning ((((class color) (min-colors 257)) (:foreground "#FD971F" :weight normal :underline nil)) (((class color) (min-colors 89)) (:foreground "#FF8C00" :weight normal :underline nil))))
 '(highlight-symbol-face ((((class color) (min-colors 89)) (:inherit highlight))))
 '(message-header-newsgroups ((((class color) (min-colors 257)) (:foreground "#E6DB74" :weight bold)) (((class color) (min-colors 89)) (:foreground "#CDC673" :weight bold))))
 '(outline-1 ((((class color) (min-colors 257)) (:inherit org-level-1)) (((class color) (min-colors 89)) (:inherit org-level-1))))
 '(outline-2 ((((class color) (min-colors 257)) (:inherit org-level-2)) (((class color) (min-colors 89)) (:inherit org-level-2))))
 '(outline-3 ((((class color) (min-colors 257)) (:inherit org-level-3)) (((class color) (min-colors 89)) (:inherit org-level-3))))
 '(outline-4 ((((class color) (min-colors 257)) (:inherit org-level-4)) (((class color) (min-colors 89)) (:inherit org-level-4))))
 '(outline-5 ((((class color) (min-colors 257)) (:inherit org-level-5)) (((class color) (min-colors 89)) (:inherit org-level-5))))
 '(outline-6 ((((class color) (min-colors 257)) (:inherit org-level-6)) (((class color) (min-colors 89)) (:inherit org-level-6))))
 '(outline-7 ((((class color) (min-colors 257)) (:inherit org-level-7)) (((class color) (min-colors 89)) (:inherit org-level-7))))
 '(outline-8 ((((class color) (min-colors 257)) (:inherit org-level-8)) (((class color) (min-colors 89)) (:inherit org-level-8))))
 '(gnus-summary-normal-unread ((((class color) (min-colors 257)) (:foreground "#F8F8F2")) (((class color) (min-colors 89)) (:foreground "#F5F5F5"))))
 '(gnus-summary-normal-read ((((class color) (min-colors 257)) (:foreground "#A6E22E")) (((class color) (min-colors 89)) (:foreground "#87D700"))))
 '(gnus-summary-normal-ancient ((((class color) (min-colors 257)) (:foreground "#66D9EF")) (((class color) (min-colors 89)) (:foreground "#5FD7FF"))))
 '(gnus-summary-normal-ticked ((((class color) (min-colors 257)) (:foreground "#FD971F")) (((class color) (min-colors 89)) (:foreground "#FF8C00"))))
 '(gnus-summary-low-unread ((((class color) (min-colors 257)) (:foreground "#F8F8F2")) (((class color) (min-colors 89)) (:foreground "#F5F5F5"))))
 '(gnus-summary-low-read ((((class color) (min-colors 257)) (:foreground "#A6E22E")) (((class color) (min-colors 89)) (:foreground "#87D700"))))
 '(gnus-summary-low-ancient ((((class color) (min-colors 257)) (:foreground "#66D9EF")) (((class color) (min-colors 89)) (:foreground "#5FD7FF"))))
 '(gnus-summary-high-unread ((((class color) (min-colors 257)) (:foreground "#F8F8F2" :weight bold)) (((class color) (min-colors 89)) (:foreground "#F5F5F5" :weight bold))))
 '(gnus-summary-high-read ((((class color) (min-colors 257)) (:foreground "#A6E22E" :weight bold)) (((class color) (min-colors 89)) (:foreground "#87D700" :weight bold))))
 '(gnus-summary-high-ancient ((((class color) (min-colors 257)) (:foreground "#66D9EF" :weight bold)) (((class color) (min-colors 89)) (:foreground "#5FD7FF" :weight bold))))
 '(gnus-summary-high-ticked ((((class color) (min-colors 257)) (:foreground "#FD971F" :weight bold)) (((class color) (min-colors 89)) (:foreground "#FF8C00" :weight bold))))
 '(gnus-summary-cancelled ((((class color) (min-colors 257)) (:foreground "#FD971F")) (((class color) (min-colors 89)) (:foreground "#FF8C00"))))
 '(gnus-group-mail-low-empty ((((class color) (min-colors 257)) (:inherit gnus-group-news-low-empty)) (((class color) (min-colors 89)) (:inherit gnus-group-news-low-empty))))
 '(gnus-group-mail-1-empty ((((class color) (min-colors 257)) (:inherit gnus-group-news-1-empty)) (((class color) (min-colors 89)) (:inherit gnus-group-news-1-empty))))
 '(gnus-group-mail-2-empty ((((class color) (min-colors 257)) (:inherit gnus-group-news-2-empty)) (((class color) (min-colors 89)) (:inherit gnus-group-news-2-empty))))
 '(gnus-group-mail-3-empty ((((class color) (min-colors 257)) (:inherit gnus-group-news-3-empty)) (((class color) (min-colors 89)) (:inherit gnus-group-news-3-empty))))
 '(gnus-group-news-6 ((((class color) (min-colors 257)) (:weight bold :inherit gnus-group-news-6-empty)) (((class color) (min-colors 89)) (:weight bold :inherit gnus-group-news-6-empty))))
 '(gnus-group-news-1-empty ((((class color) (min-colors 257)) (:foreground "#E6DB74")) (((class color) (min-colors 89)) (:foreground "#CDC673"))))
 '(gnus-group-news-2-empty ((((class color) (min-colors 257)) (:foreground "#A6E22E")) (((class color) (min-colors 89)) (:foreground "#87D700"))))
 '(gnus-group-news-3-empty ((((class color) (min-colors 257)) (:foreground "#A6E22E")) (((class color) (min-colors 89)) (:foreground "#87D700"))))
 '(gnus-group-news-4-empty ((((class color) (min-colors 257)) (:foreground "#66D9EF")) (((class color) (min-colors 89)) (:foreground "#5FD7FF"))))
 '(gnus-group-news-5-empty ((((class color) (min-colors 257)) (:foreground "#66D9EF")) (((class color) (min-colors 89)) (:foreground "#5FD7FF"))))
 '(gnus-group-news-6-empty ((((class color) (min-colors 257)) (:foreground "#1DB4D0")) (((class color) (min-colors 89)) (:foreground "#87D7FF"))))
 '(custom-group-tag ((((class color) (min-colors 257)) (:inherit default :foreground "#66D9EF" :height 1.2)) (((class color) (min-colors 89)) (:inherit default :foreground "#5FD7FF" :height 1.2))))
 '(custom-state ((((class color) (min-colors 257)) (:foreground "#A6E22E")) (((class color) (min-colors 89)) (:foreground "#87D700"))))
 '(ffap ((t (:inherit highlight :foreground "black" :height 1.0))))
 '(menu ((((class color) (min-colors 257)) (:foreground "#F8F8F2" :background "#272822")) (((class color) (min-colors 89)) (:foreground "#F5F5F5" :background "#1B1E1C"))))
 '(variable-pitch ((t (:height 1.0 :family "Inconsolata"))))
 '(org-block-begin-line ((((class color) (min-colors 257)) (:foreground "#75715E" :background "#35331D" :slant italic)) (((class color) (min-colors 89)) (:foreground "#FFFAFA" :background "#333333" :slant italic))))
 '(org-block-end-line ((((class color) (min-colors 257)) (:foreground "#75715E" :background "#35331D" :slant italic)) (((class color) (min-colors 89)) (:foreground "#FFFAFA" :background "#333333" :slant italic))))
 '(org-checkbox ((((class color) (min-colors 257)) (:background "#272822" :foreground "#F8F8F2" :box (:line-width 1 :style released-button))) (((class color) (min-colors 89)) (:background "#1B1E1C" :foreground "#F5F5F5" :box (:line-width 1 :style released-button)))))
 '(org-default ((t (:family "Inconsolata" :height 1.0 :box nil :inherit default))))
 '(org-headline-done ((((class color) (min-colors 257)) (:foreground "#A6E22E")) (((class color) (min-colors 89)) (:foreground "#87D700"))))
 '(org-level-1 ((((class color) (min-colors 257)) (:inherit default :height 1.3 :foreground "#FD971F")) (((class color) (min-colors 89)) (:inherit default :height 1.3 :foreground "#FF8C00"))))
 '(org-level-2 ((((class color) (min-colors 257)) (:inherit default :height 1.2 :foreground "#A6E22E")) (((class color) (min-colors 89)) (:inherit default :height 1.2 :foreground "#87D700"))))
 '(org-level-5 ((((class color) (min-colors 257)) (:inherit default :foreground "#A1EFE4")) (((class color) (min-colors 89)) (:inherit default :foreground "#5FFFFF"))))
 '(org-level-6 ((((class color) (min-colors 257)) (:inherit default :foreground "#A6E22E")) (((class color) (min-colors 89)) (:inherit default :foreground "#87D700"))))
 '(org-level-7 ((((class color) (min-colors 257)) (:inherit default :foreground "#F92672")) (((class color) (min-colors 89)) (:inherit default :foreground "#FF1493"))))
 '(org-level-8 ((((class color) (min-colors 257)) (:inherit default :foreground "#66D9EF")) (((class color) (min-colors 89)) (:inherit default :foreground "#5FD7FF"))))
 '(org-priority ((t (:inherit font-lock-keyword-face :height 1.0 :family "Inconsolata"))))
 '(org-tag ((((class color) (min-colors 257)) (:weight bold)) (((class color) (min-colors 89)) (:weight bold))))
 '(button ((t (:underline t))))
 '(tool-bar ((t (:background "grey75" :foreground "black" :box (:line-width 1 :style released-button)))))
 '(scroll-bar ((t (:background "grey75" :foreground "WhiteSmoke"))))
 '(tooltip ((((class color) (min-colors 257)) (:background "#BBEF53" :foreground "#272822" :inherit default))))
 '(window-divider ((((type graphic)) :foreground "#099709")))
 '(window-divider-first-pixel ((((type graphic)) :foreground "#3cb370")))
 '(window-divider-last-pixel ((((type graphic)) :inherit window-divider-first-pixel)))
 '(calendar-today ((((type graphic)) :box (:line-width -1 :color "#ea3838" :style nil))))
 '(diary ((((class color) (min-colors 257)) (:foreground "#E6DB74")) (((class color) (min-colors 89)) (:foreground "#CDC673"))))
 '(holiday ((t (:background "chocolate4"))))
 '(comint-highlight-prompt ((t (:foreground "cyan1"))))
 '(comint-highlight-input ((t (:bold t :weight bold))))
 '(compilation-info ((((class color) (min-colors 257)) (:foreground "#75715E" :underline nil :bold nil)) (((class color) (min-colors 89)) (:foreground "#8B8878" :underline nil :bold nil))))
 '(compilation-warning ((((class color) (min-colors 257)) (:inherit warning :underline nil)) (((class color) (min-colors 89)) (:inherit warning :underline nil))))
 '(compilation-error ((((class color) (min-colors 257)) (:inherit error :underline nil)) (((class color) (min-colors 89)) (:inherit error :underline nil))))
 '(completions-common-part ((t (:width normal :weight normal :slant normal :foreground "WhiteSmoke" :background "black" :height 81))))
 '(custom-button ((t (:box (:line-width 1 :style released-button) :background "grey50" :foreground "black"))))
 '(custom-button-pressed ((t (:inherit (quote custom-button) :box (:style pressed-button)))))
 '(custom-button-mouse ((t (:inherit (quote custom-button) :background "grey60"))))
 '(custom-button-unraised ((t (:background "grey50" :foreground "black"))))
 '(custom-button-pressed-unraised ((((type graphic)) :inherit custom-button-unraised :underline t)))
 '(custom-comment ((((type graphic)) :foreground "#9f9f9f")))
 '(custom-link ((((type graphic)) :inherit link)))
 '(custom-group-tag-1 ((((class color) (min-colors 257)) (:inherit default :foreground "#F92672" :height 1.2)) (((class color) (min-colors 89)) (:inherit default :foreground "#FF1493" :height 1.2))))
 '(custom-group-subtitle ((((type graphic)) :inherit alect-title-3)))
 '(custom-face-tag ((((class color) (min-colors 257)) (:inherit default :height 1.2 :foreground "#AE81FF" :weight bold)) (((class color) (min-colors 89)) (:inherit default :height 1.2 :foreground "#AF87FF" :weight bold))))
 '(custom-variable-button ((t (:inherit (quote custom-button)))))
 '(custom-visibility ((((type graphic)) :inherit link :height 0.8)))
 '(diff-context ((((class color) (min-colors 89)) (:foreground "seashell4"))))
 '(diff-indicator-added ((((class color) (min-colors 89)) (:foreground "white" :background "darkolivegreen"))))
 '(diff-indicator-changed ((((class color) (min-colors 89)) (:foreground "white" :background "dodgerblue4"))))
 '(diff-indicator-removed ((((class color) (min-colors 89)) (:foreground "white" :background "indianred4"))))
 '(diff-function ((((class color) (min-colors 89)) (:inherit diff-header))))
 '(diff-index ((((class color) (min-colors 89)) (:inherit diff-file-header))))
 '(diff-nonexistent ((t (:bold t :weight bold :background "Black" :foreground "Wheat1"))))
 '(dired-directory ((((class color) (min-colors 257)) (:foreground "#66D9EF")) (((class color) (min-colors 89)) (:foreground "#5FD7FF"))))
 '(dired-flagged ((((class color) (min-colors 257)) (:foreground "#F92672")) (((class color) (min-colors 89)) (:foreground "#FF1493"))))
 '(dired-header ((((class color) (min-colors 257)) (:foreground "#66D9EF" :background "#272822" :inherit bold)) (((class color) (min-colors 89)) (:foreground "#5FD7FF" :background "#1B1E1C" :inherit bold))))
 '(dired-ignored ((((class color) (min-colors 257)) (:inherit shadow)) (((class color) (min-colors 89)) (:inherit shadow))))
 '(dired-mark ((((class color) (min-colors 257)) (:foreground "#A6E22E" :weight bold)) (((class color) (min-colors 89)) (:foreground "#87D700" :weight bold))))
 '(dired-marked ((((class color) (min-colors 257)) (:foreground "#AE81FF" :inherit bold)) (((class color) (min-colors 89)) (:foreground "#AF87FF" :inherit bold))))
 '(dired-perm-write ((((class color) (min-colors 257)) (:foreground "#F8F8F2" :underline t)) (((class color) (min-colors 89)) (:foreground "#F5F5F5" :underline t))))
 '(dired-symlink ((((class color) (min-colors 257)) (:foreground "#A1EFE4" :slant italic)) (((class color) (min-colors 89)) (:foreground "#5FFFFF" :slant italic))))
 '(dired-warning ((((class color) (min-colors 257)) (:foreground "#FD971F" :underline t)) (((class color) (min-colors 89)) (:foreground "#FF8C00" :underline t))))
 '(epa-mark ((t (:bold t :foreground "orange" :weight bold))))
 '(epa-string ((t (:foreground "lightyellow"))))
 '(epa-validity-disabled ((t (:italic t :slant italic))))
 '(epa-validity-high ((t (:bold t :foreground "PaleTurquoise" :weight bold))))
 '(epa-validity-medium ((t (:italic t :foreground "PaleTurquoise" :slant italic))))
 '(epa-validity-low ((t (:italic t :slant italic))))
 '(gnus-group-news-low-empty ((((class color) (min-colors 257)) (:foreground "#75715E")) (((class color) (min-colors 89)) (:foreground "#8B8878"))))
 '(gnus-summary-low-ticked ((((class color) (min-colors 257)) (:foreground "#FD971F")) (((class color) (min-colors 89)) (:foreground "#FF8C00"))))
 '(gnus-summary-selected ((((class color) (min-colors 257)) (:foreground "#E6DB74" :weight bold)) (((class color) (min-colors 89)) (:foreground "#CDC673" :weight bold))))
 '(help-argument-name ((t (:italic t :slant italic))))
 '(info-title-1 ((((class color) (min-colors 257)) (:height 1.3)) (((class color) (min-colors 89)) (:height 1.3))))
 '(info-title-2 ((((class color) (min-colors 257)) (:height 1.2)) (((class color) (min-colors 89)) (:height 1.2))))
 '(info-title-3 ((((class color) (min-colors 257)) (:height 1.15)) (((class color) (min-colors 89)) (:height 1.15))))
 '(info-title-4 ((((class color) (min-colors 257)) (:height 1.1)) (((class color) (min-colors 89)) (:height 1.1))))
 '(info-menu-header ((((class color) (min-colors 89)) (:family "helv" :weight bold))))
 '(info-node ((((class color) (min-colors 257)) (:foreground "#AE81FF" :inherit bold)) (((class color) (min-colors 89)) (:foreground "#AF87FF" :inherit bold))))
 '(info-menu-star ((((type graphic)) :foreground "#ea3838")))
 '(Info-quoted ((((type graphic)) :foreground "#f6f0e1" :weight bold)))
 '(message-header-xheader ((((class color) (min-colors 257)) (:foreground "#A1EFE4")) (((class color) (min-colors 89)) (:foreground "#5FFFFF"))))
 '(message-mml ((((class color) (min-colors 257)) (:foreground "#E6DB74" :weight bold)) (((class color) (min-colors 89)) (:foreground "#CDC673" :weight bold))))
 '(org-agenda-date-today ((((class color) (min-colors 257)) (:inherit org-agenda-date :inverse-video t :weight bold :underline unspecified :overline nil :box unspecified :foreground "#66D9EF" :background "#272822")) (((class color) (min-colors 89)) (:inherit org-agenda-date :inverse-video t :weight bold :underline unspecified :overline nil :box unspecified :foreground "#5FD7FF" :background "#1B1E1C"))))
 '(org-archived ((((class color) (min-colors 257)) (:foreground "#75715E" :weight normal)) (((class color) (min-colors 89)) (:foreground "#8B8878" :weight normal))))
 '(org-date-selected ((((class color) (min-colors 257)) (:foreground "#F92672" :inverse-video t)) (((class color) (min-colors 89)) (:foreground "#FF1493" :inverse-video t))))
 '(org-mode-line-clock ((t (:foreground "DarkGreen" :underline t))))
 '(org-mode-line-clock-overrun ((((class color) (min-colors 257)) (:inherit mode-line)) (((class color) (min-colors 89)) (:inherit mode-line))))
 '(org-time-grid ((((class color) (min-colors 257)) (:foreground "#75715E")) (((class color) (min-colors 89)) (:foreground "#8B8878"))))
 '(org-verbatim ((t (:foreground "grey70" :underline t))))
 '(vc-up-to-date-state ((((type graphic)) :foreground "#32cd32")))
 '(vc-edited-state ((((type graphic)) :foreground "#e5c900")))
 '(vc-missing-state ((((type graphic)) :foreground "#ea3838")))
 '(vc-conflict-state ((((type graphic)) :foreground "#c83029" :weight bold)))
 '(vc-locked-state ((((type graphic)) :foreground "#2fdbde")))
 '(vc-locally-added-state ((((type graphic)) :foreground "#62b6ea")))
 '(vc-needs-update-state ((((type graphic)) :foreground "#e353b9")))
 '(vc-removed-state ((((type graphic)) :foreground "#fa5151")))
 '(widget-button-pressed ((t (:foreground "red1" :background "lightgrey" :box (:line-width 2 :style pressed-button)))))
 '(widget-documentation ((t (:foreground "lime green"))))
 '(widget-inactive ((t (:foreground "grey70"))))
 '(widget-single-line-field ((t (:background "dim gray"))))
 '(fixed-pitch ((t (:inherit (default)))))
 '(next-error ((t (:background "blue3"))))
 '(query-replace ((t (:foreground "brown4" :background "palevioletred2"))))
 '(info-xref ((((class color) (min-colors 89)) (:foreground "SeaGreen2"))))
 '(info-xref-visited ((t (:foreground "#ad7fa8"))))
 '(org-quote ((t (:inherit org-block :slant italic))))
 '(org-verse ((t (:inherit org-block :slant italic))))
 '(org-agenda-date-weekend ((((class color) (min-colors 257)) (:inherit org-agenda-date :inverse-video nil :background unspecified :foreground "#75715E" :weight unspecified :underline t :overline nil :box unspecified)) (((class color) (min-colors 89)) (:inherit org-agenda-date :inverse-video nil :background unspecified :foreground "#8B8878" :weight unspecified :underline t :overline nil :box unspecified))))
 '(org-agenda-restriction-lock ((((class color) (min-colors 257)) (:background "#E6DB74")) (((class color) (min-colors 89)) (:background "#CDC673"))))
 '(org-drawer ((((class color) (min-colors 257)) (:foreground "#A1EFE4")) (((class color) (min-colors 89)) (:foreground "#5FFFFF"))))
 '(gnus-splash ((t (:foreground "#cccccc"))))
 '(gnus-summary-high-undownloaded ((t (:bold t :foreground "ivory3" :weight bold))))
 '(gnus-summary-normal-undownloaded ((t (:foreground "LightGray" :weight normal))))
 '(gnus-summary-low-undownloaded ((t (:italic t :foreground "grey75" :slant italic :weight normal))))
 '(org-sexp-date ((((class color) (min-colors 257)) (:foreground "#AE81FF")) (((class color) (min-colors 89)) (:foreground "#AF87FF"))))
 '(org-target ((t (:underline t))))
 '(buffer-menu-buffer ((t (:bold t :weight bold))))
 '(completions-first-difference ((t (:bold t :weight bold))))
 '(epa-field-body ((t (:italic t :foreground "turquoise" :slant italic))))
 '(epa-field-name ((t (:bold t :foreground "PaleTurquoise" :weight bold))))
 '(file-name-shadow ((t (:foreground "grey70"))))
 '(ido-incomplete-regexp ((((class color) (min-colors 257)) (:foreground "#F92672" :weight bold)) (((class color) (min-colors 89)) (:foreground "#FF1493" :weight bold))))
 '(mouse ((((class color) (min-colors 257)) (:foreground "#272822" :background "#F8F8F2" :inverse-video t)) (((class color) (min-colors 89)) (:foreground "#1B1E1C" :background "#F5F5F5" :inverse-video t))))
 '(nobreak-space ((t (:foreground "cyan" :underline t))))
 '(table-cell ((((class color) (min-colors 257)) (:foreground "#F8F8F2" :background "#3C3D37")) (((class color) (min-colors 89)) (:foreground "#F5F5F5" :background "#000000"))))
 '(info-header-node ((((class color) (min-colors 89)) (:foreground "DeepSkyBlue1"))))
 '(info-header-xref ((((class color) (min-colors 257)) (:foreground "#A6E22E" :inherit bold :underline t)) (((class color) (min-colors 89)) (:foreground "#87D700" :inherit bold :underline t))))
 '(c-annotation-face ((((class color) (min-colors 257)) (:inherit font-lock-constant-face)) (((class color) (min-colors 89)) (:inherit font-lock-constant-face))))
 '(custom-comment-tag ((((class color) (min-colors 257)) (:foreground "#75715E")) (((class color) (min-colors 89)) (:foreground "#8B8878"))))
 '(hl-line ((((class color) (min-colors 257)) (:background "#3C3D37")) (((class color) (min-colors 89)) (:background "#000000"))))
 '(info-menu ((((class color) (min-colors 257)) (:foreground "#66D9EF")) (((class color) (min-colors 89)) (:foreground "#5FD7FF"))))
 '(info-quoted-name ((((class color) (min-colors 257)) (:foreground "#FD971F")) (((class color) (min-colors 89)) (:foreground "#FF8C00"))))
 '(info-reference-item ((((class color) (min-colors 257)) (:background nil :underline t :inherit bold)) (((class color) (min-colors 89)) (:background nil :underline t :inherit bold))))
 '(info-string ((((class color) (min-colors 257)) (:foreground "#E6DB74")) (((class color) (min-colors 89)) (:foreground "#CDC673"))))
 '(magit-diff-added ((((class color) (min-colors 257)) (:foreground "#A6E22E" :background "#272822")) (((class color) (min-colors 89)) (:foreground "#87D700" :background "#1B1E1C"))))
 '(magit-diff-added-highlight ((((class color) (min-colors 257)) (:foreground "#A6E22E" :background "#3C3D37")) (((class color) (min-colors 89)) (:foreground "#87D700" :background "#000000"))))
 '(magit-diff-removed ((((class color) (min-colors 257)) (:foreground "#F92672" :background "#272822")) (((class color) (min-colors 89)) (:foreground "#FF1493" :background "#1B1E1C"))))
 '(magit-diff-removed-highlight ((((class color) (min-colors 257)) (:foreground "#F92672" :background "#3C3D37")) (((class color) (min-colors 89)) (:foreground "#FF1493" :background "#000000"))))
 '(magit-log-author ((((class color) (min-colors 257)) (:foreground "#A1EFE4")) (((class color) (min-colors 89)) (:foreground "#5FFFFF"))))
 '(magit-log-graph ((((class color) (min-colors 257)) (:foreground "#75715E")) (((class color) (min-colors 89)) (:foreground "#8B8878"))))
 '(mmm-init-submode-face ((((class color) (min-colors 257)) (:background "#945AFF")) (((class color) (min-colors 89)) (:background "#5F00AF"))))
 '(mmm-cleanup-submode-face ((((class color) (min-colors 257)) (:background "#D47402")) (((class color) (min-colors 89)) (:background "#AF5F00"))))
 '(mmm-declaration-submode-face ((((class color) (min-colors 257)) (:background "#74DBCD")) (((class color) (min-colors 89)) (:background "#5FAFAF"))))
 '(mmm-special-submode-face ((((class color) (min-colors 257)) (:background "#86C30D")) (((class color) (min-colors 89)) (:background "#5F8700"))))
 '(mmm-default-submode-face ((((class color) (min-colors 257)) (:background "#35331D")) (((class color) (min-colors 89)) (:background "#333333"))))
 '(org-clock-overlay ((((class color) (min-colors 257)) (:background "#E6DB74")) (((class color) (min-colors 89)) (:background "#CDC673"))))
 '(speedbar-button-face ((((class color) (min-colors 257)) (:inherit default :foreground "#75715E")) (((class color) (min-colors 89)) (:inherit default :foreground "#8B8878"))))
 '(speedbar-directory-face ((((class color) (min-colors 257)) (:inherit default :foreground "#66D9EF")) (((class color) (min-colors 89)) (:inherit default :foreground "#5FD7FF"))))
 '(speedbar-file-face ((((class color) (min-colors 257)) (:inherit default :foreground "#F8F8F2")) (((class color) (min-colors 89)) (:inherit default :foreground "#F5F5F5"))))
 '(speedbar-highlight-face ((((class color) (min-colors 257)) (:inherit default :background "#3C3D37")) (((class color) (min-colors 89)) (:inherit default :background "#000000"))))
 '(speedbar-selected-face ((((class color) (min-colors 257)) (:inherit default :foreground "#E6DB74" :underline t)) (((class color) (min-colors 89)) (:inherit default :foreground "#CDC673" :underline t))))
 '(speedbar-separator-face ((((class color) (min-colors 257)) (:inherit default :background "#66D9EF" :foreground "#272822" :overline "#4BBEAE")) (((class color) (min-colors 89)) (:inherit default :background "#5FD7FF" :foreground "#1B1E1C" :overline "#AFFFFF"))))
 '(speedbar-tag-face ((((class color) (min-colors 257)) (:inherit default :foreground "#A6E22E")) (((class color) (min-colors 89)) (:inherit default :foreground "#87D700"))))
 '(undo-tree-visualizer-unmodified-face ((((class color) (min-colors 257)) (:foreground "#A6E22E")) (((class color) (min-colors 89)) (:foreground "#87D700")))))

(provide-theme 'RyanTheme)
